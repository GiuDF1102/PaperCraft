import { Container, Navbar, Nav, Row } from "react-bootstrap";
import { MaterialSymbol } from "react-material-symbols";
import { Whisper } from "rsuite";
import { Popover } from "rsuite";
import { forwardRef } from "react";
import { Slider } from "rsuite";
import { sendToLogs } from "./utils/api.js";

function NavbarPaperCraft({ settings, setSettings }) {
  return (
    <>
      <Navbar className="navbar">
        <Title />
        <Nav>
          <InfoButton />
          {/* <SettingsButton settings={settings} setSettings={setSettings} /> */}
        </Nav>
      </Navbar>
    </>
  );
}

function Title() {
  return (
    <>
      <Navbar.Brand>
        <div className="box">
          <div className="title">PaperCraft</div>
          <div className="subtitle">Tone-Up!</div>
        </div>
      </Navbar.Brand>
      <Navbar.Brand className="me-auto">
        <img
          alt=""
          src="src\assets\icon_papercraft.svg"
          width="60"
          height="60"
          className="d-inline-block align-top"
        />
      </Navbar.Brand>
    </>
  );
}

function InfoButton() {
  return (
    <>
      <Nav.Link href="../public/docs.html" target="_blank">
        <MaterialSymbol
          icon="info"
          size={28}
          color="black"
          onClick={async () => {
            await sendToLogs("User clicked button Documentation");
          }}
          style={{
            backgroundColor: "transparent",
          }}
        />
      </Nav.Link>
    </>
  );
}

// function SettingsButton({ settings, setSettings }) {
//   return (
//     <>
//       <Nav.Link>
//           <MaterialSymbol
//             icon="settings"
//             size={28}
//             color="black"
//             style={{
//               backgroundColor: "transparent",
//             }}
//           />
//       </Nav.Link>
//     </>
//   );
// }

// const SettingsPopover = forwardRef((props, ref) => {
//   const newProps = { ...props };
//   // delete newProps.segmentIndex;
//   // delete newProps.promptIndex;
//   // delete newProps.removeCorrection;
//   // delete newProps.handleApply;
//   // delete newProps.addCorrection;
//   delete newProps.setSettings;
//   return (
//     <Popover
//       ref={ref}
//       {...newProps}
//       arrow={false}
//       style={{
//         backgroundColor: "transparent",
//         boxShadow: "none",
//         padding: 0,
//         marginTop: 14,
//         marginLeft: 19,
//       }}
//     >
//       <Settings settings={props.settings} setSettings={props.setSettings} />
//     </Popover>
//   );
// });

// SettingsPopover.displayName = "SettingsPopover";

// function Settings({ settings, setSettings }) {
//   const style = settings.style;
//   const length = settings.length;
//   const creativity = settings.creativity;
//   return (
//     <Container className="papercraft-loading-text-bottomend settings">
//       <Row>
//         <span className="title-dialog">Settings</span>
//       </Row>
//       <Row>
//         <span className="text-dialog">
//           <span style={{ fontWeight: "bold" }}>Style: </span>The coherence and
//           consistency of the language and writing characteristics within the
//           text.
//         </span>
//         <div className="slider-dialog">
//           <Slider
//             min={0}
//             step={1}
//             max={2}
//             graduated
//             progress
//             value={style}
//             onChange={(value) => {
//               setSettings((oldSettings) => {
//                 return {
//                   ...oldSettings,
//                   style: value,
//                 };
//               });
//             }}
//             tooltip={false}
//             renderMark={(mark) => {
//               const labels = ["Accessible", "Standard", "Formal"];
//               return <span>{labels[mark]}</span>;
//             }}
//           />
//         </div>
//       </Row>
//       <Row>
//         <span className="text-dialog">
//           <span style={{ fontWeight: "bold" }}>Length: </span>The degree of
//           verbosity in the text generated by the AI for corrections.
//         </span>
//         <div className="slider-dialog">
//           <Slider
//             min={0}
//             step={1}
//             max={2}
//             graduated
//             progress
//             value={length}
//             onChange={(value) => {
//               setSettings((oldSettings) => {
//                 return { ...oldSettings, length: value };
//               });
//             }}
//             tooltip={false}
//             renderMark={(mark) => {
//               const labels = ["Short", "Medium", "Long"];
//               return <span>{labels[mark]}</span>;
//             }}
//           />
//         </div>
//       </Row>
//       <Row>
//         <span className="text-dialog">
//           <span style={{ fontWeight: "bold" }}>Creativity: </span>Tendency of
//           the AIâ€™s generated text to adhere to predefined patterns or be novel
//           and engaging.
//         </span>
//         <div className="slider-dialog">
//           <Slider
//             min={0}
//             step={1}
//             max={2}
//             graduated
//             progress
//             value={creativity}
//             onChange={(value) => {
//               setSettings((oldSettings) => {
//                 return { ...oldSettings, creativity: value };
//               });
//             }}
//             tooltip={false}
//             renderMark={(mark) => {
//               const labels = ["Conventional", "Neutral", "Innovative"];
//               return <span>{labels[mark]}</span>;
//             }}
//           />
//         </div>
//       </Row>
//       <Row className="dialog-tip">
//         <span style={{lineHeight: "1"}}>
//           For more information and examples to better explain the scales check
//           the documentation{" "}
//           <MaterialSymbol
//             icon="info"
//             size={16}
//             color="black"
//             style={{ position: "relative", top: "4px" }}
//           />
//         </span>
//       </Row>
//     </Container>
//   );
// }

export default NavbarPaperCraft;
